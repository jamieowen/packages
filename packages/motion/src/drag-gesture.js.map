{
  "version": 3,
  "sources": ["/Users/jamieowen/Workspace/packages/packages/motion/src/drag-gesture.ts"],
  "sourcesContent": ["import { ISubscribable, reactive, Subscription, sync } from \"@thi.ng/rstream\";\nimport { add3, set3, sub2, sub3, Vec, Vec3, Vec3Like } from \"@thi.ng/vectors\";\nimport { comp, map, filter } from \"@thi.ng/transducers\";\nimport { GestureEvent, GestureStream } from \"@thi.ng/rstream-gestures\";\nimport { forceFriction, forceStream, particleStream } from \"./particle\";\nimport { IMotionEvent } from \"./api\";\n\nexport interface DragGesture2DEvent {\n  gesture: GestureStream;\n  particle: IMotionEvent<\"particle\">;\n}\n\nexport interface DragGesture2DOpts {\n  maxSpeed: number;\n  friction: number;\n  initialPosition?: Vec;\n}\n\nexport const dragGesture2d = (\n  gesture$: GestureStream,\n  opts: Partial<DragGesture2DOpts> = {}\n) => {\n  const { maxSpeed = 100, friction = 0.09, initialPosition = [0, 0, 0] } = opts;\n\n  // gesture position\n  let translate: Vec;\n  let delta: Vec;\n  let start: Vec;\n  let previous: Vec;\n  // particle position\n  let particleStart: Vec;\n  let isDragging: boolean = false;\n  let time: number = 0;\n  let threshold: number = 0.005;\n\n  const [force$, setForces] = forceStream([], []);\n  const particle$ = particleStream(force$, reactive({ maxSpeed, threshold }));\n  const frictionF = forceFriction(friction);\n\n  set3(particle$.deref().data.position, initialPosition);\n\n  let lastp = null;\n  return sync({\n    src: {\n      particle: particle$,\n      gesture: gesture$,\n    },\n    xform: comp(\n      filter(({ gesture, particle }) => {\n        const pchanged = particle !== lastp;\n        lastp = particle;\n        return (gesture.type !== \"move\" && gesture.type !== \"zoom\") || pchanged;\n      }),\n      map(({ gesture, particle }) => {\n        switch (gesture.type) {\n          case \"start\":\n            start = [...gesture.pos, 0]; // adapt to 3d particle\n            previous = start;\n            translate = [0, 0, 0]; // difference between start and end\n            delta = [0, 0, 0]; // difference between frame\n            isDragging = true;\n            particleStart = [...particle.data.position]; // vec3 particle\n            time = Date.now();\n            break;\n          case \"end\":\n            // gesture will remain in stream buffer until removed.\n            // so test event end\n            if (isDragging) {\n              isDragging = false;\n              setForces([frictionF], [() => delta as Vec3Like]);\n            }\n            break;\n          case \"drag\":\n            const pos = [...gesture.pos, 0];\n            translate = sub3([], pos, start);\n            const now = Date.now();\n            // calc delta with time offset since previous pos\n            if (now - time > 25) {\n              delta = sub3([], pos, previous);\n              previous = pos;\n              time = now;\n            }\n            set3(particle.data.position, add3([], particleStart, translate));\n            break;\n        }\n        return {\n          gesture,\n          particle,\n        };\n      })\n    ),\n  });\n};\n"],
  "mappings": "AAAA;AACA;AACA;AAEA;AAcO,aAAM,gBAAgB,CAC3B,UACA,OAAmC,OAChC;AACH,QAAM,CAAE,WAAW,KAAK,WAAW,MAAM,kBAAkB,CAAC,GAAG,GAAG,MAAO;AAGzE,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI;AACJ,MAAI,aAAsB;AAC1B,MAAI,OAAe;AACnB,MAAI,YAAoB;AAExB,QAAM,CAAC,QAAQ,aAAa,YAAY,IAAI;AAC5C,QAAM,YAAY,eAAe,QAAQ,SAAS,CAAE,UAAU;AAC9D,QAAM,YAAY,cAAc;AAEhC,OAAK,UAAU,QAAQ,KAAK,UAAU;AAEtC,MAAI,QAAQ;AACZ,SAAO,KAAK;AAAA,IACV,KAAK;AAAA,MACH,UAAU;AAAA,MACV,SAAS;AAAA;AAAA,IAEX,OAAO,KACL,OAAO,CAAC,CAAE,SAAS,cAAe;AAChC,YAAM,WAAW,aAAa;AAC9B,cAAQ;AACR,aAAQ,QAAQ,SAAS,UAAU,QAAQ,SAAS,UAAW;AAAA,QAEjE,IAAI,CAAC,CAAE,SAAS,cAAe;AAC7B,cAAQ,QAAQ;AAAA,aACT;AACH,kBAAQ,CAAC,GAAG,QAAQ,KAAK;AACzB,qBAAW;AACX,sBAAY,CAAC,GAAG,GAAG;AACnB,kBAAQ,CAAC,GAAG,GAAG;AACf,uBAAa;AACb,0BAAgB,CAAC,GAAG,SAAS,KAAK;AAClC,iBAAO,KAAK;AACZ;AAAA,aACG;AAGH,cAAI,YAAY;AACd,yBAAa;AACb,sBAAU,CAAC,YAAY,CAAC,MAAM;AAAA;AAEhC;AAAA,aACG;AACH,gBAAM,MAAM,CAAC,GAAG,QAAQ,KAAK;AAC7B,sBAAY,KAAK,IAAI,KAAK;AAC1B,gBAAM,MAAM,KAAK;AAEjB,cAAI,MAAM,OAAO,IAAI;AACnB,oBAAQ,KAAK,IAAI,KAAK;AACtB,uBAAW;AACX,mBAAO;AAAA;AAET,eAAK,SAAS,KAAK,UAAU,KAAK,IAAI,eAAe;AACrD;AAAA;AAEJ,aAAO;AAAA,QACL;AAAA,QACA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
