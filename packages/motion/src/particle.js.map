{
  "version": 3,
  "sources": ["/Users/jamieowen/Workspace/packages/packages/motion/src/particle.ts"],
  "sourcesContent": ["import { ISubscribable, reactive, Stream } from \"@thi.ng/rstream\";\nimport {\n  add3,\n  clampN3,\n  mulN3,\n  set3,\n  Vec,\n  Vec3Like,\n  abs3,\n  dist3,\n} from \"@thi.ng/vectors\";\n\n// import { motionStream } from \"./motion-stream\";\n// import { IParticle, ITransform, RafStream } from \"./types\";\nimport { motionParticle } from \"./base-streams\";\nimport { ITransform, IParticle } from \"./api\";\nimport { filter } from \"@thi.ng/transducers\";\n\nexport type IForce = (particle: IParticle) => Vec;\n\n// Move to factory functions\nexport class Transform implements ITransform {\n  position: Vec = [0, 0, 0];\n  scale: Vec = [1, 1, 1];\n  rotation: Vec = [0, 0, 0];\n}\n\n// Move to factory functions\nexport class Particle extends Transform implements IParticle {\n  acceleration: Vec = [0, 0, 0];\n  velocity: Vec = [0, 0, 0];\n  previous: Vec = [0, 0, 0];\n}\n\nexport const updateParticle = (particle: IParticle, forces: IForce[]) => {\n  const { acceleration, velocity, position } = particle;\n  set3(particle.previous, position);\n  forces.forEach((f) => add3(null, acceleration, f(particle)));\n  add3(null, velocity, acceleration);\n  mulN3(null, acceleration, 0);\n  add3(null, position, velocity);\n  // mulN3(null, velocity, 0.75);\n};\n\nexport const limitVelocityN = (particle: IParticle, speed: number) => {\n  clampN3(null, particle.velocity, -speed, speed);\n};\n\nexport const forceGravity = (grav: number = 1) => (): IForce => {\n  return (_p) => {\n    return [0, grav, 0];\n  };\n};\n\nexport const forceFriction = (friction: number = 0.2): IForce => {\n  const res: Vec3Like = [0, 0, 0];\n  return (p) => {\n    set3(res, p.velocity);\n    mulN3(null, res, -1);\n    // normalize?\n    mulN3(null, res, friction);\n    return res;\n  };\n};\n\nexport type ForceStream = Stream<{ forces: IForce[]; pulses: IForce[] }>;\nexport const forceStream = (\n  // continous forces\n  forces: IForce[],\n  // 'one hit' pulses\n  pulses?: IForce[]\n): [ForceStream, (forces: IForce[], pulses: IForce[]) => void] => {\n  const stream = reactive({ forces, pulses });\n  const setForces = (forces: IForce[], pulses: IForce[] = []) => {\n    stream.next({ forces, pulses });\n  };\n  return [stream, setForces];\n};\n\nexport type ParticleMotionConfig = {\n  maxSpeed?: number;\n  threshold?: number; // prevent emitting if change is below\n};\n\n/**\n * A singular particle Stream class for use in simple\n * particle style effects.  Think gestures ( throw, drag, etc ) and\n * simple primary motion elements like mouse follow effects.\n *\n * IS Very WIP.\n */\nexport const particleStream = (\n  force$: ForceStream,\n  config?: ISubscribable<ParticleMotionConfig>\n  // raf?: RafStream\n) => {\n  config =\n    config == undefined\n      ? reactive({\n          maxSpeed: 10,\n          threshold: 0.05,\n        })\n      : config;\n\n  let { forces, pulses } = force$.deref();\n  force$.subscribe({\n    next: (f) => {\n      forces = f.forces;\n      pulses = f.pulses;\n    },\n  });\n\n  let first = true;\n  return motionParticle()\n    .subscribe({\n      next: (ev) => {\n        updateParticle(ev.data, [...forces, ...pulses]);\n        limitVelocityN(ev.data, config.deref().maxSpeed);\n        pulses.splice(0);\n      },\n      error: (err) => {\n        throw err;\n      },\n    })\n    .transform(\n      filter((ev) => {\n        const dis = Math.abs(dist3(ev.data.position, ev.data.previous));\n        const changed = dis > config.deref().threshold || first;\n        first = false;\n        return changed;\n      })\n    );\n};\n"],
  "mappings": "AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AAKO,uBAAsC;AAAA,EAAtC,cArBP;AAsBE,oBAAgB,CAAC,GAAG,GAAG;AACvB,iBAAa,CAAC,GAAG,GAAG;AACpB,oBAAgB,CAAC,GAAG,GAAG;AAAA;AAAA;AAIlB,8BAAuB,UAA+B;AAAA,EAAtD,cA5BP;AA4BO;AACL,wBAAoB,CAAC,GAAG,GAAG;AAC3B,oBAAgB,CAAC,GAAG,GAAG;AACvB,oBAAgB,CAAC,GAAG,GAAG;AAAA;AAAA;AAGlB,aAAM,iBAAiB,CAAC,UAAqB,WAAqB;AACvE,QAAM,CAAE,cAAc,UAAU,YAAa;AAC7C,OAAK,SAAS,UAAU;AACxB,SAAO,QAAQ,CAAC,MAAM,KAAK,MAAM,cAAc,EAAE;AACjD,OAAK,MAAM,UAAU;AACrB,QAAM,MAAM,cAAc;AAC1B,OAAK,MAAM,UAAU;AAAA;AAIhB,aAAM,iBAAiB,CAAC,UAAqB,UAAkB;AACpE,UAAQ,MAAM,SAAS,UAAU,CAAC,OAAO;AAAA;AAGpC,aAAM,eAAe,CAAC,OAAe,MAAM,MAAc;AAC9D,SAAO,CAAC,OAAO;AACb,WAAO,CAAC,GAAG,MAAM;AAAA;AAAA;AAId,aAAM,gBAAgB,CAAC,WAAmB,QAAgB;AAC/D,QAAM,MAAgB,CAAC,GAAG,GAAG;AAC7B,SAAO,CAAC,MAAM;AACZ,SAAK,KAAK,EAAE;AACZ,UAAM,MAAM,KAAK;AAEjB,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA;AAAA;AAKJ,aAAM,cAAc,CAEzB,QAEA,WACgE;AAChE,QAAM,SAAS,SAAS,CAAE,QAAQ;AAClC,QAAM,YAAY,CAAC,SAAkB,UAAmB,OAAO;AAC7D,WAAO,KAAK,CAAE,iBAAQ;AAAA;AAExB,SAAO,CAAC,QAAQ;AAAA;AAeX,aAAM,iBAAiB,CAC5B,QACA,WAEG;AACH,WACE,UAAU,SACN,SAAS;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,OAEb;AAEN,MAAI,CAAE,QAAQ,UAAW,OAAO;AAChC,SAAO,UAAU;AAAA,IACf,MAAM,CAAC,MAAM;AACX,eAAS,EAAE;AACX,eAAS,EAAE;AAAA;AAAA;AAIf,MAAI,QAAQ;AACZ,SAAO,iBACJ,UAAU;AAAA,IACT,MAAM,CAAC,OAAO;AACZ,qBAAe,GAAG,MAAM,CAAC,GAAG,QAAQ,GAAG;AACvC,qBAAe,GAAG,MAAM,OAAO,QAAQ;AACvC,aAAO,OAAO;AAAA;AAAA,IAEhB,OAAO,CAAC,QAAQ;AACd,YAAM;AAAA;AAAA,KAGT,UACC,OAAO,CAAC,OAAO;AACb,UAAM,MAAM,KAAK,IAAI,MAAM,GAAG,KAAK,UAAU,GAAG,KAAK;AACrD,UAAM,UAAU,MAAM,OAAO,QAAQ,aAAa;AAClD,YAAQ;AACR,WAAO;AAAA;AAAA;",
  "names": []
}
