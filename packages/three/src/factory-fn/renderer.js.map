{
  "version": 3,
  "sources": ["/Users/jamieowen/Workspace/packages/packages/three/src/factory-fn/renderer.ts"],
  "sourcesContent": ["import { WebGLRenderer, WebGLRendererParameters } from \"three\";\nimport { resizeObserverStream } from \"@jamieowen/browser\";\n\n/**\n * Create a WebGLRenderer and add it to the supplied dom element.\n * If no element is supplied, document.body is used.\n *\n * The domElement is watched for resize using a ResizeObserver. This is returned as a resize observer stream.\n *\n * @param domElement\n * @param params\n */\nexport const createRenderer = (\n  mountElement?: HTMLElement,\n  params?: WebGLRendererParameters\n) => {\n  const mount = mountElement || document.body;\n  const renderer = new WebGLRenderer({\n    antialias: true,\n    ...params,\n  });\n  const domElement = createContainer(renderer.domElement);\n  mount.appendChild(domElement);\n  const resize = resizeObserverStream(domElement);\n  resize.subscribe({\n    next: ({ entry, width, height }) => {\n      renderer.setSize(width, height);\n    },\n  });\n  return { resize, domElement, renderer };\n};\n\nconst createContainer = (canvas: HTMLElement) => {\n  const element = document.createElement(\"div\");\n  element.style.position = \"absolute\";\n  element.style.width = \"100%\";\n  element.style.height = \"100%\";\n  element.appendChild(canvas);\n  return element;\n};\n"],
  "mappings": "AAAA;AACA;AAWO,aAAM,iBAAiB,CAC5B,cACA,WACG;AACH,QAAM,QAAQ,gBAAgB,SAAS;AACvC,QAAM,WAAW,IAAI,cAAc;AAAA,IACjC,WAAW;AAAA,OACR;AAAA;AAEL,QAAM,aAAa,gBAAgB,SAAS;AAC5C,QAAM,YAAY;AAClB,QAAM,SAAS,qBAAqB;AACpC,SAAO,UAAU;AAAA,IACf,MAAM,CAAC,CAAE,OAAO,OAAO,YAAa;AAClC,eAAS,QAAQ,OAAO;AAAA;AAAA;AAG5B,SAAO,CAAE,QAAQ,YAAY;AAAA;AAG/B,MAAM,kBAAkB,CAAC,WAAwB;AAC/C,QAAM,UAAU,SAAS,cAAc;AACvC,UAAQ,MAAM,WAAW;AACzB,UAAQ,MAAM,QAAQ;AACtB,UAAQ,MAAM,SAAS;AACvB,UAAQ,YAAY;AACpB,SAAO;AAAA;",
  "names": []
}
