{"version":3,"file":"three.js","sources":["../../../../../packages/three/dist/geometry/GeometryFactory.js","../../../../../packages/three/dist/geometry/trail-geometries.js","../../../../../packages/three/dist/interaction/drag-gesture-3d.js","../../../../../packages/three/dist/interaction/gesture-stream-3d.js","../../../../../packages/three/dist/factory-fn/controls.js","../../../../../packages/three/dist/factory-fn/helpers.js","../../../../../packages/three/dist/factory-fn/renderer.js","../../../../../packages/three/dist/factory-fn/geometries.js","../../../../../packages/three/dist/factory-fn/mesh-factory.js","../../../../../packages/three/dist/render/render-viewports.js","../../../../../packages/three/dist/streams/raf-clock-stream.js","../../../../../packages/three/dist/render/sketch.js","../../../../../packages/three/dist/prefabs/dome-simple.js","../../../../../packages/three/dist/gpgpu/buffer-helpers.js","../../../../../packages/three/dist/gpgpu/state-texture.js","../../../../../packages/three/dist/gpgpu/create.js","../../../../../packages/three/dist/gpgpu/particle-state-lines.js","../../../../../packages/three/dist/gpgpu/particle-state-points.js"],"sourcesContent":["import { memoize1 } from \"@thi.ng/memoize\";\nimport { Matrix4 } from \"three\";\nexport var GeometryAlignment;\n(function (GeometryAlignment) {\n    GeometryAlignment[\"CENTER\"] = \"center\";\n    GeometryAlignment[\"BOTTOM\"] = \"bottom\";\n    GeometryAlignment[\"TOP\"] = \"top\";\n    GeometryAlignment[\"LEFT\"] = \"left\";\n    GeometryAlignment[\"RIGHT\"] = \"right\";\n    GeometryAlignment[\"FRONT\"] = \"front\";\n    GeometryAlignment[\"BACK\"] = \"back\";\n})(GeometryAlignment || (GeometryAlignment = {}));\nexport class GeometryFactory {\n    constructor() {\n        this.map = new Map();\n    }\n    register(id, create) {\n        const createForAlignment = memoize1((alignment) => {\n            const geom = create();\n            return alignGeometry[alignment](geom);\n        });\n        const alignments = Object.values(GeometryAlignment);\n        alignments.forEach((align) => {\n            const lookup = this.getID(id, align);\n            this.map.set(lookup, {\n                handle: false,\n                create: () => createForAlignment(align),\n            });\n        });\n    }\n    getID(id, alignment) {\n        return [id, alignment].join(\"/\");\n    }\n    create(id, alignment = GeometryAlignment.CENTER) {\n        const lookup = this.getID(id, alignment);\n        return this.map.get(lookup).create();\n    }\n}\nconst boundingBox = (geometry) => {\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    return geometry.boundingBox;\n};\nexport const alignGeometry = {\n    [GeometryAlignment.CENTER]: (geometry) => {\n        return geometry;\n    },\n    [GeometryAlignment.BOTTOM]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(0, -bounds.min.y, 0));\n    },\n    [GeometryAlignment.TOP]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(0, bounds.min.y, 0));\n    },\n    [GeometryAlignment.LEFT]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(-bounds.min.x, 0, 0));\n    },\n    [GeometryAlignment.RIGHT]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(bounds.min.x, 0, 0));\n    },\n    [GeometryAlignment.FRONT]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(0, 0, bounds.min.z));\n    },\n    [GeometryAlignment.BACK]: (geometry) => {\n        const bounds = boundingBox(geometry);\n        return geometry.applyMatrix4(new Matrix4().makeTranslation(0, 0, -bounds.min.z));\n    },\n};\n","/**\n *\n * Some WIP geometries for 'trail' style objects that\n * will eventually be extruded along a path either on the CPU/GPU.\n *\n */\nimport { BoxBufferGeometry, ConeBufferGeometry, Matrix4 } from \"three\";\nconst FLIP = new Matrix4().makeRotationZ(Math.PI);\nexport const trailConeGeometry = () => {\n    const cone = new ConeBufferGeometry(1, 1, 6, 1);\n    cone.applyMatrix4(FLIP);\n    return cone;\n};\nexport const trailBoxGeometry = () => {\n    const box = new BoxBufferGeometry(1, 1, 1, 1, 1, 1);\n    box.applyMatrix4(FLIP);\n    return box;\n};\n","import { forceFriction, forceStream, particleStream, } from \"@jamieowen/motion\";\nimport { add3, set3, sub3 } from \"@thi.ng/vectors\";\nimport { reactive, sync } from \"@thi.ng/rstream\";\nimport { map, comp, filter } from \"@thi.ng/transducers\";\nexport const dragGesture3d = (gesture$, opts = {}) => {\n    const { maxSpeed = 0.8, friction = 0.12, initialPosition = [0, 0, 0] } = opts;\n    // gesture position\n    let translate;\n    let delta;\n    let start;\n    let previous;\n    // particle position\n    let particleStart;\n    let isDragging = false;\n    let time = 0;\n    const threshold = 0.005;\n    const [force$, setForces] = forceStream([], []);\n    const particle$ = particleStream(force$, reactive({ maxSpeed, threshold }));\n    const frictionF = forceFriction(friction);\n    set3(particle$.deref().data.position, initialPosition);\n    let lastp = null;\n    return sync({\n        src: {\n            particle: particle$,\n            gesture: gesture$,\n        },\n        xform: comp(filter(({ gesture, particle }) => {\n            const pchanged = particle !== lastp;\n            lastp = particle;\n            return (gesture.type !== \"move\" && gesture.type !== \"zoom\") || pchanged;\n        }), map(({ gesture, particle }) => {\n            switch (gesture.type) {\n                case \"start\":\n                    start = gesture.pos;\n                    previous = start;\n                    translate = [0, 0, 0]; // difference between start and end\n                    delta = [0, 0, 0]; // difference between frame\n                    isDragging = true;\n                    particleStart = [...particle.data.position];\n                    time = Date.now();\n                    break;\n                case \"end\":\n                    // gesture will remain in stream buffer until removed.\n                    // so test event end\n                    if (isDragging) {\n                        isDragging = false;\n                        setForces([frictionF], [() => delta]);\n                    }\n                    break;\n                case \"drag\":\n                    translate = sub3([], gesture.pos, start);\n                    const now = Date.now();\n                    // calc delta with time offset since previous pos\n                    if (now - time > 25) {\n                        delta = sub3([], gesture.pos, previous);\n                        previous = gesture.pos;\n                        time = now;\n                    }\n                    set3(particle.data.position, add3([], particleStart, translate));\n                    break;\n            }\n            return {\n                gesture,\n                particle,\n            };\n        })),\n    });\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { gestureStream, } from \"@thi.ng/rstream-gestures\";\nimport { map } from \"@thi.ng/transducers\";\nimport { Raycaster, Plane, Vector3 } from \"three\";\nexport const gestureStream3d = (domElement, camera, resize, opts = {}) => {\n    const { normal = [0, 1, 0] } = opts, _opts = __rest(opts, [\"normal\"]);\n    const raycaster = new Raycaster();\n    const position = new Vector3(0, 0, 0);\n    const norm = new Vector3();\n    norm.fromArray(normal);\n    const plane = new Plane(norm);\n    const ndc = new Vector3();\n    const setPlaneNormal = (x, y, z) => {\n        norm.set(x, y, z);\n        plane.set(norm, 0);\n    };\n    return gestureStream(domElement, Object.assign(Object.assign({}, _opts), { eventOpts: {} })).transform(map((event) => {\n        const { width, height } = resize.deref();\n        const { pos } = event;\n        const [x, y] = pos;\n        ndc.x = (x / width) * 2.0 - 1.0;\n        ndc.y = -(y / height) * 2.0 + 1.0;\n        raycaster.setFromCamera(ndc, camera);\n        raycaster.ray.intersectPlane(plane, position);\n        return Object.assign(Object.assign({}, event), { ndc, isDown: event.active.length > 0, plane,\n            raycaster, is3d: true, position, pos: position.toArray(), setPlaneNormal });\n    }));\n};\n","import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nexport const orbitControls = (camera, container) => {\n    return new OrbitControls(camera, container);\n};\n","import { PointLight, PointLightHelper, DirectionalLightHelper, GridHelper, DirectionalLight, Group, PerspectiveCamera, CameraHelper, OrthographicCamera, } from \"three\";\n/**\n * Add debug helpers to lights found in the given object.\n * @param obj\n */\nexport const createLightHelpers = (obj) => {\n    const group = new Group();\n    const helpers = [];\n    obj.traverse((obj) => {\n        if (obj instanceof PointLight) {\n            helpers.push(pointLightHelper(obj));\n        }\n        else if (obj instanceof DirectionalLight) {\n            helpers.push(directionalLightHelper(obj));\n        }\n    });\n    group.add.apply(group, helpers);\n    return group;\n};\nexport const createCameraHelpers = (obj) => {\n    const group = new Group();\n    const helpers = [];\n    obj.traverse((obj) => {\n        if (obj instanceof PerspectiveCamera) {\n            helpers.push(new CameraHelper(obj));\n        }\n        else if (obj instanceof OrthographicCamera) {\n            helpers.push(new CameraHelper(obj));\n        }\n    });\n    group.add.apply(group, helpers);\n    return group;\n};\nexport const pointLightHelper = (light, size = 0.2, color = \"yellow\") => {\n    return new PointLightHelper(light, size, color);\n};\nexport const directionalLightHelper = (light, size = 0.2, color = \"yellow\") => {\n    return new DirectionalLightHelper(light, size, color);\n};\nexport const createGridHelper = (size = 10, divisions = 10, color1 = \"yellow\", color2 = \"blue\") => new GridHelper(size, divisions, color1, color2);\n","import { WebGLRenderer } from \"three\";\nimport { resizeObserverStream } from \"@jamieowen/browser\";\n/**\n * Create a WebGLRenderer and add it to the supplied dom element.\n * If no element is supplied, document.body is used.\n *\n * The domElement is watched for resize using a ResizeObserver. This is returned as a resize observer stream.\n *\n * @param domElement\n * @param params\n */\nexport const createRenderer = (mountElement, params) => {\n    const mount = mountElement || document.body;\n    const renderer = new WebGLRenderer(Object.assign({ antialias: true }, params));\n    const domElement = createContainer(renderer.domElement);\n    mount.appendChild(domElement);\n    const resize = resizeObserverStream(domElement);\n    resize.subscribe({\n        next: ({ entry, width, height }) => {\n            renderer.setSize(width, height);\n        },\n    });\n    return { resize, domElement, renderer };\n};\nconst createContainer = (canvas) => {\n    const element = document.createElement(\"div\");\n    element.style.position = \"absolute\";\n    element.style.width = \"100%\";\n    element.style.height = \"100%\";\n    element.appendChild(canvas);\n    return element;\n};\n","import { BoxBufferGeometry, SphereBufferGeometry, PlaneBufferGeometry, CircleBufferGeometry, } from \"three\";\nimport { GeometryFactory } from \"../geometry/GeometryFactory\";\nexport function createGeometryFactory() {\n    const factory = new GeometryFactory();\n    factory.register(\"box\", () => new BoxBufferGeometry());\n    factory.register(\"sphere\", () => new SphereBufferGeometry());\n    factory.register(\"plane\", () => new PlaneBufferGeometry());\n    factory.register(\"circle\", () => new CircleBufferGeometry(1, 30));\n    return factory;\n}\nexport const DEFAULT_GEOMETRY_FACTORY = createGeometryFactory();\n","import { createGeometryFactory } from \"./geometries\";\nimport { Mesh, MeshBasicMaterial, MeshStandardMaterial, Vector3, MeshLambertMaterial, MeshPhongMaterial, } from \"three\";\nexport class MeshFactory {\n    constructor() {\n        this.geometryFactory = createGeometryFactory();\n        this.scale = new Vector3(1, 1, 1);\n        this.setMaterial({\n            color: \"white\",\n        }, MeshBasicMaterial);\n        this.sphere();\n    }\n    setGeometry(geometry) {\n        this.nextGeometry = geometry;\n    }\n    plane(align) {\n        this.setGeometry(this.geometryFactory.create(\"plane\", align));\n    }\n    sphere(align) {\n        this.setGeometry(this.geometryFactory.create(\"sphere\", align));\n    }\n    box(align) {\n        this.setGeometry(this.geometryFactory.create(\"box\", align));\n    }\n    setMaterial(params, cls) {\n        this.nextMaterialParams = params;\n        this.nextMaterialClass = cls;\n    }\n    basicMaterial(params) {\n        this.setMaterial(params, MeshBasicMaterial);\n    }\n    lambertMaterial(params) {\n        this.setMaterial(params, MeshLambertMaterial);\n    }\n    phongMaterial(params) {\n        this.setMaterial(params, MeshPhongMaterial);\n    }\n    standardMaterial(params) {\n        this.setMaterial(params, MeshStandardMaterial);\n    }\n    mesh(parent) {\n        const mesh = new Mesh(this.nextGeometry, new this.nextMaterialClass(this.nextMaterialParams));\n        if (parent) {\n            parent.add(mesh);\n        }\n        mesh.scale.copy(this.scale);\n        return mesh;\n    }\n}\nexport const createMeshFactory = () => {\n    return new MeshFactory();\n};\n","/**\n *\n * Helper functions for rendering various types\n * to rectangular regions of the viewport.\n *\n */\nimport { Scene, OrthographicCamera, Vector4, MeshBasicMaterial, Mesh, PlaneBufferGeometry, } from \"three\";\nimport { range2d } from \"@thi.ng/transducers\";\n/**\n * Temp helper objects.\n */\nconst tmp = (() => {\n    const viewport = new Vector4();\n    const scene = new Scene();\n    const camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    const material = new MeshBasicMaterial({\n        color: \"white\",\n    });\n    const geometry = new PlaneBufferGeometry(2, 2);\n    const mesh = new Mesh(geometry, material);\n    mesh.frustumCulled = false;\n    scene.add(mesh);\n    return {\n        viewport,\n        scene,\n        camera,\n        material,\n        mesh,\n    };\n})();\n/**\n *\n * Render to a single viewport rectangle.\n *\n * @param renderer\n * @param rect\n * @param render\n */\nexport const renderViewportRect = (renderer, rect, render) => {\n    renderViewportRects(renderer, [rect], render);\n};\n/**\n *\n * Render to multiple viewport rectangles.\n *\n * @param renderer\n * @param rects\n * @param render\n */\nexport const renderViewportRects = (renderer, rects, render) => {\n    renderer.getViewport(tmp.viewport);\n    renderer.setScissorTest(true);\n    rects.forEach((rect) => {\n        renderer.setViewport(rect.x, rect.y, rect.width, rect.height);\n        renderer.setScissor(rect.x, rect.y, rect.width, rect.height);\n        renderer.clearDepth();\n        render(renderer, rect);\n    });\n    renderer.setViewport(tmp.viewport);\n    renderer.setScissorTest(false);\n};\n/**\n *\n * Render a texture to the given viewport Rect.\n *\n * @param renderer\n * @param opts\n */\nexport const renderViewportTexture = (renderer, texture, rect) => {\n    tmp.material.map = texture;\n    renderViewportRect(renderer, rect, () => {\n        renderer.render(tmp.scene, tmp.camera);\n    });\n};\nexport const renderTextures = () => { };\n/**\n *\n * Render a number of regions in a grid.\n *\n * @param renderer\n * @param opts\n */\nexport const renderViewportGrid = (renderer, opts) => {\n    const [gx, gy] = opts.grid;\n    const { width, height } = renderer.getContext().canvas;\n    const pr = renderer.getPixelRatio();\n    const vw = width / pr / gx;\n    const vh = height / pr / gy;\n    renderer.setScissorTest(true);\n    [...range2d(gx, gy)].map(([x, y], i) => {\n        renderer.setScissor(vw * x, vh * y, vw, vh);\n        renderer.setViewport(vw * x, vh * y, vw, vh);\n        opts.render(i, [x, y], [vw, vh]);\n    });\n    renderer.setScissorTest(false);\n};\n","import { fromRAF } from \"@thi.ng/rstream\";\nimport { Clock } from \"three\";\nimport { map } from \"@thi.ng/transducers\";\nexport function rafClockStream() {\n    const clock = new Clock();\n    return fromRAF().transform(map((i) => {\n        return {\n            clock,\n            delta: clock.getDelta(),\n            time: clock.getElapsedTime(),\n            frame: i,\n        };\n    }));\n}\n","import { PerspectiveCamera, Scene } from \"three\";\nimport { rafClockStream } from \"../streams/raf-clock-stream\";\nimport { gestureStream3d } from \"../interaction\";\nimport { keyboardStream } from \"@jamieowen/browser\";\nimport { createRenderer } from \"../factory-fn/renderer\";\nimport { orbitControls } from \"../factory-fn/controls\";\nexport function createSketch(setup, container) {\n    const { domElement, renderer, resize } = createRenderer(container);\n    renderer.setPixelRatio(2);\n    const scene = new Scene();\n    const camera = new PerspectiveCamera(45);\n    camera.position.set(0, 2, 10);\n    camera.lookAt(0, 0, 0);\n    resize.subscribe({\n        next: ({ width, height }) => {\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n            renderer.setSize(width, height);\n        },\n    });\n    let userRender;\n    const render = (render) => {\n        userRender = render;\n    };\n    const clock = rafClockStream();\n    clock.subscribe({\n        next: ({ delta, frame, time }) => {\n            if (userRender) {\n                const autoRender = userRender({\n                    delta,\n                    frame,\n                    time,\n                });\n                // Return false to prevent automatically rendering the default scene and camera\n                if (autoRender || autoRender === undefined) {\n                    renderer.render(scene, camera);\n                }\n            }\n        },\n    });\n    const controls = orbitControls(camera, renderer.domElement);\n    controls.enabled = false;\n    const gestures = gestureStream3d(renderer.domElement, camera, resize);\n    const keyboard = keyboardStream({\n        listen: [\" \"],\n    });\n    keyboard.subscribe({\n        next: ({ isKeyDown, keysDown, keysToggled }) => {\n            controls.enabled = isKeyDown;\n        },\n    });\n    const configure = (config) => {\n        // resize observer will trigger a renderer resize\n        domElement.style.width = config.width.toString();\n        domElement.style.height = config.height.toString();\n    };\n    domElement.style.touchAction = \"none\";\n    setup({\n        domElement,\n        renderer,\n        scene,\n        camera,\n        resize,\n        render,\n        clock,\n        configure,\n        controls,\n        gestures,\n        keyboard,\n    });\n}\nexport const sketch = createSketch;\n","import { BackSide, SphereBufferGeometry, AmbientLight, DirectionalLight, HemisphereLight, Matrix4, CameraHelper, } from \"three\";\nimport { createMeshFactory, createLightHelpers } from \"../factory-fn\";\nimport { reactiveOptsFactory } from \"@jamieowen/core\";\nconst mf = createMeshFactory();\nconst createDome = (parent) => {\n    const dome = new SphereBufferGeometry(1, 20, 30).applyMatrix4(new Matrix4().makeRotationX(Math.PI * -0.5));\n    mf.setGeometry(dome);\n    mf.lambertMaterial({\n        color: \"crimson\",\n        emissive: \"red\",\n        emissiveIntensity: 0.2,\n        side: BackSide,\n    });\n    return mf.mesh(parent);\n};\nconst createFloor = (parent, color = \"crimson\") => {\n    // Floor\n    mf.lambertMaterial({\n        color: \"crimson\",\n        emissive: \"crimson\",\n        emissiveIntensity: 0.2,\n    });\n    mf.scale.multiplyScalar(10);\n    mf.plane();\n    const floor = mf.mesh(parent);\n    floor.rotation.x = Math.PI * -0.5;\n    return floor;\n};\nexport const createDomeSimpleOpts = reactiveOptsFactory({\n    color: \"crimson\",\n    intensity: [0.2, 0.4, 0.3],\n    emissive: {\n        intensity: [0.1, 0.2],\n        offset: [\n            [0, 0, 0],\n            [0, 0, 0], // floor\n        ],\n    },\n    showHelpers: true,\n});\n/**\n *\n * A mimimal dome and light setup.\n * Designed for reuse without major configurations.\n *\n * @param parent\n * @param opts\n */\nexport const createDomeSimpleLight = (parent, opts = createDomeSimpleOpts({})) => {\n    mf.scale.set(1, 1, 1);\n    const dome = createDome(parent);\n    dome.scale.multiplyScalar(30);\n    const floor = createFloor(parent);\n    floor.scale.multiplyScalar(10);\n    floor.receiveShadow = true;\n    const amb = new AmbientLight();\n    const dir = new DirectionalLight();\n    const hem = new HemisphereLight();\n    const lights = [amb, dir, hem];\n    parent.add(amb, hem, dir);\n    dir.castShadow = true;\n    dir.shadow.camera.far = 50;\n    dir.shadow.camera.near = 5;\n    dir.shadow.camera.left = -10;\n    dir.shadow.camera.right = 10;\n    dir.shadow.camera.top = 10;\n    dir.shadow.camera.bottom = -10;\n    const shadowHelper = new CameraHelper(dir.shadow.camera);\n    parent.add(shadowHelper);\n    dir.position.set(2, 4, 5).multiplyScalar(4);\n    const helpers = createLightHelpers(parent);\n    parent.add(helpers);\n    opts.subscribe({\n        next: ({ color, intensity, emissive, showHelpers }) => {\n            // Apply color\n            amb.intensity = intensity[0];\n            dir.intensity = intensity[1];\n            hem.intensity = intensity[2];\n            const dm = dome.material;\n            const fm = floor.material;\n            // Set color to the same\n            dm.color.set(color);\n            fm.color.set(color);\n            dm.emissive.set(color);\n            fm.emissive.set(color);\n            dm.emissiveIntensity = emissive.intensity[0];\n            fm.emissiveIntensity = emissive.intensity[1];\n            dm.emissive.offsetHSL.apply(dm.emissive, emissive.offset[0]);\n            fm.emissive.offsetHSL.apply(fm.emissive, emissive.offset[1]);\n            helpers.visible = showHelpers;\n            shadowHelper.visible = showHelpers;\n        },\n    });\n    opts.next({});\n    return {\n        opts,\n        dome,\n        lights,\n        floor,\n        helpers,\n    };\n};\n","import { DataTexture, FloatType, LuminanceAlphaFormat, RGBAFormat, RGBFormat, UVMapping, ClampToEdgeWrapping, NearestFilter, RedFormat, } from \"three\";\nimport { SYSTEM } from \"@thi.ng/random\";\nexport const randomFloat32Array3 = (count, minmax = [0, 1], rng = SYSTEM) => {\n    const array = new Float32Array(count * 3);\n    let offset = 0;\n    for (let i = 0; i < array.length; i += 3) {\n        array[offset] = rng.minmax(minmax[0], minmax[1]);\n        array[offset + 1] = 0;\n        array[offset + 2] = 0;\n        offset += 3;\n    }\n    return array;\n};\nexport const randomFloat32Array2 = (count) => {\n    const array = new Float32Array(count * 2);\n    let offset = 0;\n    for (let i = 0; i < array.length; i += 2) {\n        array[offset] = 0;\n        array[offset + 1] = 0;\n        offset += 2;\n    }\n    return array;\n};\nexport const randomFloat32Array1 = (count, minmax = [0, 1], rng = SYSTEM) => {\n    const array = new Float32Array(count);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = rng.minmax(minmax[0], minmax[1]);\n    }\n    return array;\n};\nexport const dataTexture = (data, width, height, size = 3) => {\n    let format;\n    if (size === 1) {\n        format = RedFormat;\n    }\n    else if (size === 2) {\n        format = LuminanceAlphaFormat;\n    }\n    else if (size === 3) {\n        format = RGBFormat;\n    }\n    else if (size === 4) {\n        format = RGBAFormat;\n    }\n    return new DataTexture(data, width, height, format, FloatType, UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, NearestFilter, NearestFilter);\n};\nexport const encodeFillFloat32Array3 = (count, fill) => {\n    const array = new Float32Array(count * 3);\n    let offset = 0;\n    for (let i = 0; i < array.length; i += 3) {\n        fill(array, offset);\n        offset += 3;\n    }\n    return array;\n};\nexport const encodeFillDataTexture3 = (width, height, fill) => {\n    const array = encodeFillFloat32Array3(width * height, fill);\n    return dataTexture(array, width, height, 3);\n};\nexport const encodeFillFloat32Array4 = (count, fill) => {\n    const array = new Float32Array(count * 4);\n    let offset = 0;\n    for (let i = 0; i < array.length; i += 4) {\n        fill(array, offset);\n        offset += 4;\n    }\n    return array;\n};\nexport const encodeFillDataTexture4 = (width, height, fill) => {\n    const array = encodeFillFloat32Array4(width * height, fill);\n    return dataTexture(array, width, height, 4);\n};\n","import { RawShaderMaterial, BufferGeometry, Scene, Mesh, WebGLRenderTarget, OrthographicCamera, RGBAFormat, FloatType, ClampToEdgeWrapping, NearestFilter, BufferAttribute, DoubleSide, } from \"three\";\nconst defaultRttOpts = {\n    format: RGBAFormat,\n    type: FloatType,\n    // mapping: UVMapping,\n    wrapS: ClampToEdgeWrapping,\n    wrapT: ClampToEdgeWrapping,\n    minFilter: NearestFilter,\n    magFilter: NearestFilter,\n    stencilBuffer: false,\n    depthBuffer: false,\n};\nconst createTexture = (width, height) => {\n    return new WebGLRenderTarget(width, height, {\n        format: RGBAFormat,\n        type: FloatType,\n        // mapping: UVMapping,\n        wrapS: ClampToEdgeWrapping,\n        wrapT: ClampToEdgeWrapping,\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        stencilBuffer: false,\n        depthBuffer: false,\n    });\n};\nconst createGeometry = (buffer) => {\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new BufferAttribute(buffer, 3));\n    return geometry;\n};\nexport class GPGPUState {\n    /**\n     *\n     * @param renderer\n     * @param setup\n     */\n    constructor(renderer, setup) {\n        this.scene = new Scene();\n        this.setup = setup;\n        this.renderer = renderer;\n        // Create state textures.\n        this.states = new Array(setup.count)\n            .fill(0)\n            .map(() => createTexture(setup.width, setup.height));\n        // Main ping/pong update material\n        this.material = new RawShaderMaterial({\n            vertexShader: setup.vertexSource,\n            fragmentShader: setup.fragmentSource,\n            depthTest: false,\n            depthWrite: false,\n            // side: setup.geomType === \"triangle\" ? BackSide : FrontSide,\n            side: DoubleSide,\n            uniforms: {\n                // TODO: need to make dynamic\n                state_1: { value: null },\n                state_2: { value: null },\n            },\n        });\n        // Material to write a data texture to the output buffer.\n        this.writeMaterial = new RawShaderMaterial({\n            vertexShader: setup.vertexSource,\n            fragmentShader: setup.fragmentWriteSource,\n            depthTest: false,\n            depthWrite: false,\n            side: DoubleSide,\n            uniforms: {\n                inputSource: { value: null },\n            },\n        });\n        this.geometry = createGeometry(setup.positionBuffer);\n        this.mesh = new Mesh(this.geometry, this.material);\n        this.camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n        this.scene.add(this.mesh);\n    }\n    /**\n     * Set the supplied data as all states and\n     * write it to the current output buffer.\n     *\n     * This is replaces the current state and\n     * @param data\n     */\n    write(data) {\n        this.writeMaterial.uniforms[\"inputSource\"].value = data;\n        this.mesh.material = this.writeMaterial;\n        // TODO : unnecessary to write all states.\n        this.states.forEach((state) => {\n            this.renderer.setRenderTarget(state);\n            this.renderer.render(this.scene, this.camera);\n        });\n        this.renderer.setRenderTarget(null);\n        this.mesh.material = this.material;\n    }\n    /**\n     * Update the state using the supplied update shader.\n     * Number of state textures should be equal to count + 1,\n     * as the the texture in state[0] will be the output\n     * texture.\n     */\n    update() {\n        // Update state uniforms\n        // this.states.forEach((state, i) => {\n        //   this.material.uniforms[`state_${i}`].value = state.texture;\n        // });\n        // Render\n        this.material.uniforms[\"state_1\"].value = this.states[1].texture;\n        if (this.states.length >= 3) {\n            this.material.uniforms[\"state_2\"].value = this.states[2].texture;\n        }\n        this.renderer.setRenderTarget(this.states[0]);\n        this.renderer.render(this.scene, this.camera);\n        this.renderer.setRenderTarget(null);\n        this.nextState();\n    }\n    get output() {\n        return this.states[0];\n    }\n    /**\n     * Return a preview texture ( that is not being rendered to next )\n     */\n    get preview() {\n        return this.states[1];\n    }\n    /**\n     * Advance the states along from left to right.\n     * The texture in the state[0] position will\n     * be the next output buffer.\n     *\n     * State at > state[1] can be used as a texture for preview.\n     */\n    nextState() {\n        let prevState = this.states[this.states.length - 1];\n        for (let i = 0; i < this.states.length; i++) {\n            let current = this.states[i];\n            this.states[i] = prevState;\n            prevState = current;\n        }\n    }\n}\n","import { gpgpuSetup } from \"@jamieowen/webgl\";\nimport { GPGPUState } from \"./state-texture\";\nexport const createStateTextureAst = (renderer, opts) => {\n    const setup = gpgpuSetup(opts);\n    return new GPGPUState(renderer, setup);\n};\n","import { BufferAttribute, BufferGeometry, LineSegments, RawShaderMaterial, Vector2, } from \"three\";\nimport { compileProgramAst, particleLinesProgram } from \"@jamieowen/webgl\";\nconst particleStateLinesMaterial = () => {\n    const { fragmentSource, vertexSource } = compileProgramAst(particleLinesProgram());\n    const material = new RawShaderMaterial({\n        // vertexColors: addColor,\n        vertexShader: vertexSource,\n        fragmentShader: fragmentSource,\n        linewidth: 2,\n    });\n    material.uniforms[\"state_1\"] = { value: null };\n    material.uniforms[\"state_2\"] = { value: null };\n    material.uniforms[\"resolution\"] = { value: new Vector2() };\n    return material;\n};\n/**\n *\n * Particle State.\n * Lines Geometry.\n */\nconst particleStateLinesGeometry = (count, color) => {\n    const geometry = new BufferGeometry();\n    const position = new BufferAttribute(new Float32Array(count * 3 * 2).fill(0), 3);\n    // Offsets span from 0 to count * 2.\n    // From this, the line segment start and end is determined by offset % 2\n    // And the offset for reading from the texture is offset / 2\n    const offset = new BufferAttribute(new Float32Array(\n    // new Array(count * 2).fill(0).map((_v, i) => Math.floor(i / 2))\n    new Array(count * 2).fill(0).map((_v, i) => i)), 1);\n    geometry.setAttribute(\"position\", position);\n    geometry.setAttribute(\"offset\", offset);\n    if (color) {\n        geometry.setAttribute(\"color\", color);\n    }\n    return geometry;\n};\n/**\n *\n * Particle State.\n * Lines Rendering.\n *\n */\nexport class ParticleStateLineSegments extends LineSegments {\n    constructor(count, state, color) {\n        super(particleStateLinesGeometry(count, color), particleStateLinesMaterial());\n        this.onBeforeRender = () => {\n            const material = this.material;\n            material.uniforms.state_1.value = this.state.preview.texture;\n            material.uniforms.state_2.value = this.state.states[2].texture;\n            material.uniforms.resolution.value.x = this.state.setup.width;\n            material.uniforms.resolution.value.y = this.state.setup.height;\n        };\n        this.state = state;\n        if (this.state.states.length < 3) {\n            throw new Error(\"Lines segment renderer needs an additional state[2] to render.\");\n        }\n    }\n}\nexport const createParticleStateLineSegments = (count, state, color) => {\n    return new ParticleStateLineSegments(count, state, color);\n};\n","import { BufferAttribute, BufferGeometry, Points, RawShaderMaterial, Vector2, } from \"three\";\nimport { compileProgramAst, particlePointsProgram } from \"@jamieowen/webgl\";\nconst particleStatePointsMaterial = (addColor) => {\n    const { fragmentSource, vertexSource } = compileProgramAst(particlePointsProgram());\n    const material = new RawShaderMaterial({\n        vertexShader: vertexSource,\n        fragmentShader: fragmentSource,\n    });\n    material.uniforms[\"state_1\"] = { value: null };\n    material.uniforms[\"point_size\"] = { value: 5.0 };\n    material.uniforms[\"resolution\"] = { value: new Vector2() };\n    return material;\n};\n/**\n *\n * Particle State.\n * Points Geometry.\n *\n */\nconst particleStatePointsGeometry = (count, color) => {\n    const geometry = new BufferGeometry();\n    const position = new BufferAttribute(new Float32Array(count * 3).fill(0), 3);\n    const offset = new BufferAttribute(new Float32Array(new Array(count).fill(0).map((_v, i) => i)), 1);\n    geometry.setAttribute(\"position\", position);\n    geometry.setAttribute(\"offset\", offset);\n    if (color) {\n        geometry.setAttribute(\"color\", color);\n    }\n    return geometry;\n};\n/**\n *\n * Particle State.\n * Points Rendering.\n *\n */\nexport class ParticleStatePoints extends Points {\n    constructor(count, state, color) {\n        super(particleStatePointsGeometry(count, color), particleStatePointsMaterial(null));\n        this.onBeforeRender = () => {\n            const material = this.material;\n            material.uniforms.state_1.value = this.state.preview.texture;\n            material.uniforms.resolution.value.x = this.state.setup.width;\n            material.uniforms.resolution.value.y = this.state.setup.height;\n        };\n        this.state = state;\n    }\n}\nexport const createParticleStatePoints = (count, state, color) => {\n    return new ParticleStatePoints(count, state, color);\n};\n"],"names":["ConeBufferGeometry","BoxBufferGeometry","this","SphereBufferGeometry","PlaneBufferGeometry","CircleBufferGeometry"],"mappings":"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"}