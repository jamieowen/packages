{"version":3,"file":"vectors.js","sources":["../../../../../node_modules/@thi.ng/vectors/magsq.js","../../../../../node_modules/@thi.ng/vectors/mag.js","../../../../../node_modules/@thi.ng/vectors/normalize.js","../../../../../node_modules/@thi.ng/vectors/clamp.js","../../../../../node_modules/@thi.ng/vectors/dist-manhattan.js","../../../../../node_modules/@thi.ng/vectors/mul.js","../../../../../node_modules/@thi.ng/vectors/div.js"],"sourcesContent":["import { compile, compileG } from \"./internal/codegen\";\nimport { vop } from \"./internal/vop\";\nconst $ = (dim) => magSq.add(dim, compile(dim, ([a]) => `${a}*${a}`, \"a\", \"a\", \"\", \"+\", \"return \", \";\"));\nexport const magSq = vop();\nmagSq.default(compileG(([a]) => `sum+=${a}*${a};`, \"a\", undefined, \"sum\", \"let sum=0;\"));\nexport const magSq2 = $(2);\nexport const magSq3 = $(3);\nexport const magSq4 = $(4);\n","import { magSq } from \"./magsq\";\nexport const mag = (v) => Math.sqrt(magSq(v));\n","import { EPS } from \"@thi.ng/math\";\nimport { mag } from \"./mag\";\nimport { mulN } from \"./muln\";\nimport { set } from \"./set\";\n/**\n * Normalizes vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalize = (out, v, n = 1) => {\n    !out && (out = v);\n    const m = mag(v);\n    return m >= EPS ? mulN(out, v, n / m) : out !== v ? set(out, v) : out;\n};\n","import { clamp as _clamp, clamp01 as _clamp01, clamp11 as _clamp11, } from \"@thi.ng/math\";\nimport { ARGS_VVV, defHofOp } from \"./internal/codegen\";\nimport { FN3 } from \"./internal/templates\";\nexport const [clamp, clamp2, clamp3, clamp4] = defHofOp(_clamp, FN3(), ARGS_VVV);\nexport const [clamp01, clamp01_2, clamp01_3, clamp01_4] = defHofOp(_clamp01, FN3(), ARGS_VVV);\nexport const [clamp11, clamp11_2, clamp11_3, clamp11_4] = defHofOp(_clamp11, FN3(), ARGS_VVV);\n","import { compile, compileG } from \"./internal/codegen\";\nimport { vop } from \"./internal/vop\";\nconst $ = (dim) => distManhattan.add(dim, compile(dim, ([a, b]) => `Math.abs(${a}-${b})`, \"a,b\", undefined, \"\", \"+\", \"return \", \";\"));\nexport const distManhattan = vop();\ndistManhattan.default(compileG(([a, b]) => `sum+=Math.abs(${a}-${b});`, \"a,b\", undefined, \"sum\", \"let sum=0;\"));\nexport const distManhattan2 = $(2);\nexport const distManhattan3 = $(3);\nexport const distManhattan4 = $(4);\n","import { defMathOp } from \"./internal/codegen\";\nexport const [mul, mul2, mul3, mul4] = defMathOp(\"*\");\n","import { defMathOp } from \"./internal/codegen\";\nexport const [div, div2, div3, div4] = defMathOp(\"/\");\n"],"names":["$","_clamp","_clamp01","_clamp11"],"mappings":";;;;;;;;;;;;AAEA,MAAMA,GAAC,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AAClG,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC;AAC3B,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;AACnEA,GAAC,CAAC,CAAC,EAAE;AACLA,GAAC,CAAC,CAAC,EAAE;AACLA,GAAC,CAAC,CAAC;;ACNlB,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;ACG7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK;AAC5C,IAAI,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;AACtB,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,IAAI,OAAO,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;AAC1E;;ACbY,MAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,QAAQ,CAACC,OAAM,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE;AACvB,QAAQ,CAACC,OAAQ,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE;AACpC,QAAQ,CAACC,OAAQ,EAAE,GAAG,EAAE,EAAE,QAAQ;;ACH5F,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/H,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC;AACnC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,EAAE;AACvB,MAAC,cAAc,GAAG,CAAC,CAAC,CAAC,EAAE;AACL,CAAC,CAAC,CAAC;;ACNrB,MAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG;;ACAxC,MAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG;;;;"}