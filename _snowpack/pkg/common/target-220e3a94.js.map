{"version":3,"file":"target-220e3a94.js","sources":["../../../../../node_modules/@thi.ng/shader-ast-glsl/api.js","../../../../../node_modules/@thi.ng/defmulti/constants.js","../../../../../node_modules/@thi.ng/defmulti/defmulti.js","../../../../../node_modules/@thi.ng/shader-ast/target.js","../../../../../node_modules/@thi.ng/shader-ast-glsl/target.js"],"sourcesContent":["export var GLSLVersion;\n(function (GLSLVersion) {\n    GLSLVersion[\"GLES_100\"] = \"100\";\n    GLSLVersion[\"GLES_300\"] = \"300 es\";\n})(GLSLVersion || (GLSLVersion = {}));\n","import { NULL_LOGGER } from \"@thi.ng/api\";\n/**\n * Unique symbol used for registering a default / fallback\n * implementation.\n */\nexport const DEFAULT = Symbol();\nexport let LOGGER = NULL_LOGGER;\nexport const setLogger = (logger) => (LOGGER = logger);\n","import { unsupported } from \"@thi.ng/errors\";\nimport { DEFAULT, LOGGER } from \"./constants\";\nexport function defmulti(f, ancestors) {\n    const impls = {};\n    const rels = ancestors\n        ? makeRels(ancestors)\n        : {};\n    const fn = (...args) => {\n        const id = f(...args);\n        const g = impls[id] || findImpl(impls, rels, id) || impls[DEFAULT];\n        return g\n            ? g(...args)\n            : unsupported(`missing implementation for: \"${id.toString()}\"`);\n    };\n    fn.add = (id, g) => {\n        if (impls[id]) {\n            LOGGER.warn(`overwriting '${id.toString()}' impl`);\n        }\n        impls[id] = g;\n        return true;\n    };\n    fn.addAll = (_impls) => {\n        let ok = true;\n        for (let id in _impls) {\n            ok = fn.add(id, _impls[id]) && ok;\n        }\n        return ok;\n    };\n    fn.remove = (id) => {\n        if (!impls[id])\n            return false;\n        delete impls[id];\n        return true;\n    };\n    fn.callable = (...args) => {\n        const id = f(...args);\n        return !!(impls[id] ||\n            findImpl(impls, rels, id) ||\n            impls[DEFAULT]);\n    };\n    fn.isa = (id, parent) => {\n        let val = rels[id];\n        !val && (rels[id] = val = new Set());\n        val.add(parent);\n    };\n    fn.impls = () => {\n        const res = new Set(Object.keys(impls));\n        for (let id in rels) {\n            findImpl(impls, rels, id) && res.add(id);\n        }\n        impls[DEFAULT] && res.add(DEFAULT);\n        return res;\n    };\n    fn.rels = () => rels;\n    fn.parents = (id) => rels[id];\n    fn.ancestors = (id) => new Set(findAncestors([], rels, id));\n    fn.dependencies = function* () {\n        for (let a in rels) {\n            for (let b of rels[a])\n                yield [a, b];\n        }\n        for (let id in impls) {\n            !rels[id] && (yield [id, undefined]);\n        }\n    };\n    return fn;\n}\nconst findImpl = (impls, rels, id) => {\n    const parents = rels[id];\n    if (!parents)\n        return;\n    for (let p of parents) {\n        let impl = impls[p] || findImpl(impls, rels, p);\n        if (impl)\n            return impl;\n    }\n};\nconst findAncestors = (acc, rels, id) => {\n    const parents = rels[id];\n    if (parents) {\n        for (let p of parents) {\n            acc.push(p);\n            findAncestors(acc, rels, p);\n        }\n    }\n    return acc;\n};\nconst makeRels = (spec) => {\n    const rels = {};\n    for (let k in spec) {\n        const val = spec[k];\n        rels[k] = val instanceof Set ? val : new Set(val);\n    }\n    return rels;\n};\n","import { DEFAULT, defmulti } from \"@thi.ng/defmulti\";\nimport { unsupported } from \"@thi.ng/errors\";\n/**\n * Takes an object of code generator functions and returns a new code\n * generator / compile target function which serializes a given AST\n * using the provided node type implementations.\n *\n * {@link @thi.ng/shader-ast-glsl#targetGLSL}\n *\n * @param impls -\n */\nexport const defTarget = (impls) => {\n    const emit = defmulti((x) => x.tag);\n    emit.add(DEFAULT, (t) => unsupported(`no impl for AST node type: '${t.tag}'`));\n    emit.addAll(impls);\n    return emit;\n};\n","import { isBoolean, isNumber } from \"@thi.ng/checks\";\nimport { unsupported } from \"@thi.ng/errors\";\nimport { defTarget, isMat, isVec, itemType, sym, } from \"@thi.ng/shader-ast\";\nimport { GLSLVersion } from \"./api\";\nconst RE_SEMI = /[};]$/;\n/**\n * GLSL code gen, targets GLSL ES 3.00 (WebGL2) by default.\n *\n * Use options object to configure shader type and GLSL version: `100`\n * for WebGL, 300 for WebGL2. Currently, the only differences in terms\n * of code generation, not correctness, are:\n *\n * - attribute, varying, uniform declarations\n * - texture lookup function naming\n *\n * Unsupported features in GLSL 100:\n *\n * - Fragment shader output vars\n *\n * @param opts -\n */\nexport const targetGLSL = (opts) => {\n    const _opts = Object.assign({ type: \"fs\", version: GLSLVersion.GLES_300, versionPragma: true, prelude: \"\" }, opts);\n    const isVS = _opts.type === \"vs\";\n    // TODO update once we have struct support\n    const $type = (t) => t;\n    const $list = (body, sep = \", \") => body.map(emit).join(sep);\n    const $fn = (t) => `${t.id}(${$list(t.args)})`;\n    const $decl = (sym, arg = false) => {\n        const { id, type, opts, init } = sym;\n        const res = [];\n        if (opts.type) {\n            let type;\n            if (_opts.version < GLSLVersion.GLES_300) {\n                if (isVS) {\n                    type = {\n                        in: \"attribute\",\n                        out: \"varying\",\n                        uni: \"uniform\",\n                    }[opts.type];\n                }\n                else {\n                    type = {\n                        in: \"varying\",\n                        out: null,\n                        uni: \"uniform\",\n                    }[opts.type];\n                    !type &&\n                        unsupported(\"GLSL 100 doesn't support fragment shader output variables\");\n                }\n            }\n            else {\n                opts.loc != null && res.push(`layout(location=${opts.loc}) `);\n                opts.smooth != null && res.push(opts.smooth + \" \");\n                type = opts.type === \"uni\" ? \"uniform\" : opts.type;\n            }\n            res.push(type + \" \");\n        }\n        else {\n            opts.const && res.push(\"const \");\n            arg && opts.q && res.push(opts.q + \" \");\n        }\n        opts.prec && res.push(opts.prec + \" \");\n        res.push($type(itemType(type)), \" \", id);\n        opts.num && res.push(`[${opts.num}]`);\n        init && res.push(\" = \", emit(init));\n        return res.join(\"\");\n    };\n    const emit = defTarget({\n        arg: (t) => $decl(t, true),\n        array_init: (t) => _opts.version >= GLSLVersion.GLES_300\n            ? `${t.type}(${$list(t.init)})`\n            : unsupported(`array initializers not available in GLSL ${_opts.version}`),\n        assign: (t) => emit(t.l) + \" = \" + emit(t.r),\n        ctrl: (t) => t.id,\n        call: $fn,\n        call_i: (t) => t.id === \"texture\" && _opts.version < GLSLVersion.GLES_300\n            ? `${t.id}${t.args[0].type.substr(7)}(${$list(t.args)})`\n            : $fn(t),\n        decl: (t) => $decl(t.id),\n        fn: (t) => `${$type(t.type)} ${t.id}(${$list(t.args)}) ${emit(t.scope)}`,\n        for: (t) => `for(${t.init ? emit(t.init) : \"\"}; ${emit(t.test)}; ${t.iter ? emit(t.iter) : \"\"}) ${emit(t.scope)}`,\n        idx: (t) => `${emit(t.val)}[${emit(t.id)}]`,\n        if: (t) => {\n            const res = `if (${emit(t.test)}) ` + emit(t.t);\n            return t.f ? res + \" else \" + emit(t.f) : res;\n        },\n        lit: (t) => {\n            const v = t.val;\n            switch (t.type) {\n                case \"bool\":\n                    return isBoolean(v) ? String(v) : `bool(${emit(v)})`;\n                case \"float\":\n                    return isNumber(v)\n                        ? v === Math.trunc(v)\n                            ? v + \".0\"\n                            : String(v)\n                        : `float(${emit(v)})`;\n                case \"int\":\n                case \"uint\":\n                    return isNumber(v) ? String(v) : `${t.type}(${emit(v)})`;\n                default: {\n                    if (isVec(t) || isMat(t)) {\n                        return `${t.type}(${$list(v)})`;\n                    }\n                    return unsupported(`unknown type: ${t.type}`);\n                }\n            }\n        },\n        op1: (t) => t.post ? `(${emit(t.val)}${t.op})` : `(${t.op}${emit(t.val)})`,\n        op2: (t) => `(${emit(t.l)} ${t.op} ${emit(t.r)})`,\n        ret: (t) => \"return\" + (t.val ? \" \" + emit(t.val) : \"\"),\n        scope: (t) => {\n            let res = t.body\n                .map(emit)\n                .reduce((acc, x) => (acc.push(RE_SEMI.test(x) ? x : x + \";\"), acc), [])\n                .join(\"\\n\");\n            res += t.body.length && !RE_SEMI.test(res) ? \";\" : \"\";\n            if (!t.global) {\n                return `{\\n${res}\\n}`;\n            }\n            if (_opts.prelude) {\n                res = _opts.prelude + \"\\n\" + res;\n            }\n            if (_opts.versionPragma) {\n                res = `#version ${_opts.version}\\n` + res;\n            }\n            return res;\n        },\n        swizzle: (t) => `${emit(t.val)}.${t.id}`,\n        sym: (t) => t.id,\n        ternary: (t) => `(${emit(t.test)} ? ${emit(t.t)} : ${emit(t.f)})`,\n        while: (t) => `while (${emit(t.test)}) ${emit(t.scope)}`,\n    });\n    Object.assign(emit, {\n        gl_FragColor: sym(\"vec4\", \"gl_FragColor\"),\n        gl_FragCoord: sym(\"vec4\", \"gl_FragCoord\", { const: true }),\n        gl_FragData: sym(\"vec4[]\", \"gl_FragData\", { num: 1 }),\n        gl_FrontFacing: sym(\"bool\", \"gl_FrontFacing\", { const: true }),\n        gl_PointCoord: sym(\"vec2\", \"gl_PointCoord\", { const: true }),\n        gl_PointSize: sym(\"float\", \"gl_PointSize\"),\n        gl_Position: sym(\"vec4\", \"gl_Position\"),\n    });\n    return emit;\n};\n"],"names":[],"mappings":"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"}