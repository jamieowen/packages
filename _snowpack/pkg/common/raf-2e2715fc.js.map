{"version":3,"file":"raf-2e2715fc.js","sources":["../../../../../node_modules/@thi.ng/rstream/from/interval.js","../../../../../node_modules/@thi.ng/rstream/from/raf.js"],"sourcesContent":["import { CloseMode } from \"../api\";\nimport { Stream } from \"../stream\";\nimport { optsWithID } from \"../utils/idgen\";\n/**\n * Returns a {@link Stream} of monotonically increasing counter values,\n * emitted at given `delay` interval and up to the optionally defined\n * max value (default: âˆž), after which the stream is closed.\n *\n * @remarks\n * The stream only starts when the first subscriber becomes available.\n *\n * @param delay -\n * @param opts -\n */\nexport const fromInterval = (delay, opts) => {\n    opts = optsWithID(\"interval\", Object.assign({ num: Infinity }, opts));\n    return new Stream((stream) => {\n        let i = 0;\n        let count = opts.num;\n        stream.next(i++);\n        let id = setInterval(() => {\n            stream.next(i++);\n            if (--count <= 0) {\n                clearInterval(id);\n                stream.closeIn !== CloseMode.NEVER && stream.done();\n            }\n        }, delay);\n        return () => clearInterval(id);\n    }, opts);\n};\n","import { isNode } from \"@thi.ng/checks\";\nimport { Stream } from \"../stream\";\nimport { optsWithID } from \"../utils/idgen\";\nimport { fromInterval } from \"./interval\";\n/**\n * Yields {@link Stream} of a monotonically increasing counter,\n * triggered by a `requestAnimationFrame()` loop (only available in\n * browser environments).\n *\n * @remarks\n * In NodeJS, this function falls back to {@link fromInterval}, yielding\n * a similar (approx. 60Hz) stream.\n *\n * All subscribers to this stream will be processed during that same\n * loop iteration.\n */\nexport const fromRAF = (opts) => isNode()\n    ? fromInterval(16, opts)\n    : new Stream((stream) => {\n        let i = 0;\n        let isActive = true;\n        const loop = () => {\n            isActive && stream.next(i++);\n            isActive && (id = requestAnimationFrame(loop));\n        };\n        let id = requestAnimationFrame(loop);\n        return () => {\n            isActive = false;\n            cancelAnimationFrame(id);\n        };\n    }, optsWithID(\"raf\", opts));\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AAC7C,IAAI,IAAI,GAAG,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1E,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK;AAClC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC7B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACzB,QAAQ,IAAI,EAAE,GAAG,WAAW,CAAC,MAAM;AACnC,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7B,YAAY,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE;AAC9B,gBAAgB,aAAa,CAAC,EAAE,CAAC,CAAC;AAClC,gBAAgB,MAAM,CAAC,OAAO,KAAK,SAAS,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AACpE,aAAa;AACb,SAAS,EAAE,KAAK,CAAC,CAAC;AAClB,QAAQ,OAAO,MAAM,aAAa,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,EAAE,IAAI,CAAC,CAAC;AACb,CAAC;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;AACzC,MAAM,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC;AAC5B,MAAM,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK;AAC7B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC;AAC5B,QAAQ,MAAM,IAAI,GAAG,MAAM;AAC3B,YAAY,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACzC,YAAY,QAAQ,KAAK,EAAE,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3D,SAAS,CAAC;AACV,QAAQ,IAAI,EAAE,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAC7C,QAAQ,OAAO,MAAM;AACrB,YAAY,QAAQ,GAAG,KAAK,CAAC;AAC7B,YAAY,oBAAoB,CAAC,EAAE,CAAC,CAAC;AACrC,SAAS,CAAC;AACV,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC;;;;"}